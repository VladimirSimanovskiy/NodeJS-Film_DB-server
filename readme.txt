В базе данных "Films" реализована связь многие ко многим двух таблиц:
"film" и "genre".
Объекты таблиц имеют PKEY идентификатор типаBIGINT, а на имена объектов
(film_name и genre_name) наложено ограничение на уникальность.

--
-- В основе созданного сервера лежит следующая логика:
--
1) таблица "film" является основной таблицей базы данных, а потому обращения
на изменение данных в ней, так же позволяют менять/добавлять данные и в других
таблицах, связанных таблицей "film",
2) обращения к таблице "genre" не предполагает внесение изменений в связанные
с ней таблицы, и является "списком", хранящим названия жанров.

--
-- Операции, доступные для таблицы film:
--
1) createFilm
По POST запросу на url "http://localhost:PORT/film",
принимает JSON вида:
{
  "film_name": "имя",
  "release_year": 1895 <= год <= 2050,
  "genres": ["жанр", "жанр", "жанр"]
}
При отсутствии какого(-их)-либо из перечисленных жанров в таблице "genre", в
ней создается соответствующая запись.
В таблице "film_genre" устанавливается связь между фильмом и переданными жанрами.

Возвращает JSON с данными о созданном фильме и связанными с ним жанрами.

2) getFilm
По GET запросу на url "http://localhost:PORT/film",
Возвращает JSON вида:
[
  {
    "film_id": id,
    "film_name": имя,
    "release_year": год,
    "genre": [
        "жанр",
        "жанр",
        "жанр"
    ]
  }
...
]

Если в качестве параметров передан id "http://localhost:PORT/film?id=1",
Возвращает JSON такого же вида, только для фильма, id которого был передан.

3) updateFilm
По PUT запросу на url "http://localhost:PORT/film",
Принимает JSON вида:
{
  "film_id": id,
  "film_name": "имя",
  "release_year": 1895 <= год <= 2050,
  "genres": ["жанр", "жанр", "жанр"]
}

При отсутствии какого(-их)-либо из перечисленных жанров в таблице "genre", в
ней создается соответствующая запись.
В таблице "film_genre" устанавливается новые связи между фильмом и переданными жанрами.

4) deleteFilm
По DELETE запросу на url "http://localhost:PORT/film?id=1",
Удаляет фильм, id которого был передан.
Все связи с жанров с данным фильмом из таблицы "film_genre" удаляются каскадно.

--
-- Операции, доступные для таблицы genre:
--
1) createGenre
По POST запросу на url "http://localhost:PORT/genre",
Принимает JSON вида:
{
  "genre_name": "имя"
}

Возвращает JSON вида:
{
  "genre_id": id,
  "genre_name": "имя"
}

2) getGenre
По GET запросу на url "http://localhost:PORT/genre",
Возвращает JSON вида:
[
  {
    "genre_id": id,
    "genre_name": "имя",
    "film": ["фильм", "фильм"]
  }
...
]

Если в качестве параметров передан id "http://localhost:PORT/genre?id=1",
Возвращает JSON такого же вида, только для жанра, id которого был передан.

4) updateGenre
По PUT запросу на url "http://localhost:PORT/genre",
Принимает и возвращает JSON вида:
{
  "genre_id": id,
  "genre_name": "имя"
}

5) deleteGENRE
По DELETE запросу на url "http://localhost:PORT/genre?id=1",
Удаляет жанр, id которого был передан.
Все связи с фильмов с данным жанром из таблицы "film_genre" удаляются каскадно.
